# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- lint
- unittest
- test
- release
include:
- template: Code-Quality.gitlab-ci.yml
- template: Security/SAST.gitlab-ci.yml
python-safety:
  stage: test
  image: pipelinecomponents/python-safety:latest
  script:
  - safety check --full-report -r requirements.txt
pylint:
  stage: lint
  image: python:3.9
  before_script:
    - pip install pylint pylint-exit anybadge
    - pip install -r requirements.txt
  script:
    - mkdir ./pylint
    - pylint ./ffxiv.py --ignore=. --output-format=text . | tee ./pylint/pylint.log || pylint-exit $?
    - PYLINT_SCORE=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' ./pylint/pylint.log)
    - anybadge --label=Pylint --file=pylint/pylint.svg --value=$PYLINT_SCORE 2=red 4=orange 8=yellow 10=green
    - echo "Pylint score is $PYLINT_SCORE"
  artifacts:
    paths:
      - ./pylint/
pytest:
  image: python:3.9
  stage: unittest
  before_script:
    - pip install pytest
    - pip install -r requirements.txt
  script:
    - pytest --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml
release:
  image: node:14
  stage: release
  only:
    refs:
    - main
  script:
  - npm install -g semantic-release
  - npm install -g semantic-release @semantic-release/git
  - npm install -g semantic-release @semantic-release/gitlab
  - npm install -g semantic-release @semantic-release/gitlab-config
  - npm install -g semantic-release @semantic-release/changelog
  - npm install -g semantic-release @semantic-release/exec
  - semantic-release -e @semantic-release/gitlab-config
create-wiki:
  image: python:3.9
  stage: release
  only:
    refs:
    - main
  script:
  - pip install pdoc
  #- git clone https://oauth2:${WIKI_TOKEN}@s2.behead.de/git/ffxiv-scapy-layer.git
  #- cd ffxiv-scapy-layer
  - pip install -r requirements.txt
  - mkdir docs
  - pdoc --no-search ffxiv.py -o ./docs
  artifacts:
    paths:
      - ./docs/
sast:
  stage: test
